@page "/ListarCarreras"

@using static Servicios.CarreraServicios;
@using Entidades.Modelos
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components.Routing;
@using Servicios

@inject CarreraServicios carreraServicios;
@inject NavigationManager navigationManager;

<h3>Listar Carreras</h3>
<div class="container">
    <h4 class="fw-bold mt-3 mb-3">Gestion de Carreras</h4>
    <div class="row p-2 mt-3 border border-1 border-success">
        <div class="col-2">
            <h6 class="card-title text-success fw-bold mt-2">Listado de carreras</h6>
        </div>
        <div class="col-5">
            <InputText @bind-value="criterioBusqueda" class="form-control" placeholder="Criterio de busqueda"></InputText>
        </div>
        <div class="col-3">
            <button class="btn btn-outline-success" onclick="()=>Click_BuscarMateria(criterioBusqueda)"><i class="bi bi-search">Buscar</i></button>
        </div>
        <div class="col-2 align-conten-end">
            <NavLink href="InsertarCarrera" class="btn btn-primary"><i class="bi bi-plus-circle-fill"></i>&nbsp; Nueva carrera</NavLink>
        </div>
    </div>
    <table class="table table-striped table-hover mt-3">
        <thead class="table-dark">
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Clave</th>
                <th scope="col">Nombre</th>
                <th scope="col">Alias</th>
                <th scope="col">Estado</th>
                <th scope="col">Acciones</th>

            </tr>
        </thead>
        <tbody>
        @if(lstCarreras != null){
            @foreach (var carrera in lstCarreras)
            {
                <tr>
                    <td>@carrera.IdCarrera</td>
                    <td>@carrera.ClaveCarrera</td>
                    <td>@carrera.NombreCarrera</td>
                    <td>@carrera.AliasCarrera</td>
                    <td>@(carrera.EstadoCarrera ? "Activo" : "Inactivo")</td>

                        <td class="text-center">
                            <NavLink href="@($"ModificarCarrera/{carrera.IdCarrera}")" class="btn btn-primary btn-sm" data-toggle="tooltip" title="Edita los datos de la carrera"><i class="bi bi-pen"></i></NavLink>
                            <NavLink href="@($"AgregarMateriasCarrera/{carrera.IdCarrera}")" class="btn btn-warning btn-sm" data-toggle="tooltip" title="Edita los datos de la materia"><i class="bi bi-layout-text-sidebar"></i></NavLink>
                            <button class="btn btn-danger btn-sm" data-toggle="tooltip" title="Borra los datos de la materia" onclick="()=>Click_BorrarCarrera(carrera.IdCarrera)"><i class="bi bi-trash-fill"></i></button>
                        </td>
                </tr>
            }
        }else{
            <h3>No hay carreras registradas</h3>
        }
        </tbody>
    </table>

</div>

@code {
    private IEnumerable<E_Carrera> lstCarreras { get; set; } = new List<E_Carrera>();
    private string criterioBusqueda { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        lstCarreras = await carreraServicios.ListarCarreras();
    }
}
